name: MLOps with CML
on: [push, pull_request]

jobs:
  train-and-report:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: DVC and Python setup
      uses: iterative/setup-dvc@v1
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    - name: Configure Git
      run: |
        git config --global user.email "202108146@alu.comillas.edu"
        git config --global user.name "sofiapedros"
    - name: Restore DVC Cache
      uses: actions/cache@v3
      with:
        path: ~/.cache/dvc
        key: dvc-cache-${{ hashFiles('dvc.yaml', 'dvc.lock') }}
        restore-keys: |
          dvc-cache-
    - name: DVC Pull
      env:
        DAGSHUB_API_KEY: ${{ secrets.DAGSHUB_API_KEY }}
    # Las credenciales de Dagshub son necesarias para acceder al almacenamiento remoto
      run: |
        dvc remote modify origin --local access_key_id $DAGSHUB_API_KEY
        dvc remote modify origin --local secret_access_key $DAGSHUB_API_KEY
        dvc pull -r origin
    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip install pyyaml
        pip install -r requirements.txt
    - uses: iterative/setup-cml@v1
    - name: Run training script
      env:
        MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_API_KEY }}
        MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      run: |
        dvc repro

    - name: Login docker
      uses: docker/login-action@v3
      with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push API image (latest)
      run: |
        docker build -t ${{ secrets.IMAGE_NAME_API }}:latest .
        docker push ${{ secrets.IMAGE_NAME_API }}:latest

    - name: Build and push WEB image (latest)
      run: |
        docker build -t ${{ secrets.IMAGE_NAME_WEB }}:latest .
        docker push ${{ secrets.IMAGE_NAME_WEB }}:latest

